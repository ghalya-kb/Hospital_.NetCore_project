// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjeOdevi.Models;

#nullable disable

namespace ProjeOdevi.Migrations
{
    [DbContext(typeof(HastaneContext))]
    [Migration("20231230175902_update_randevu_database_2")]
    partial class update_randevu_database_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjeOdevi.Models.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Birimler");
                });

            modelBuilder.Entity("ProjeOdevi.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TCNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kuallanicilar");
                });

            modelBuilder.Entity("ProjeOdevi.Models.Randevu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DoktorId")
                        .HasColumnType("int");

                    b.Property<int?>("HastaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoktorId");

                    b.HasIndex("HastaId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("ProjeOdevi.Models.Admin", b =>
                {
                    b.HasBaseType("ProjeOdevi.Models.Kullanici");

                    b.ToTable("Adminler", (string)null);
                });

            modelBuilder.Entity("ProjeOdevi.Models.Doktor", b =>
                {
                    b.HasBaseType("ProjeOdevi.Models.Kullanici");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.HasIndex("BirimId");

                    b.ToTable("Doktorlar", (string)null);
                });

            modelBuilder.Entity("ProjeOdevi.Models.Hasta", b =>
                {
                    b.HasBaseType("ProjeOdevi.Models.Kullanici");

                    b.ToTable("Hastalar", (string)null);
                });

            modelBuilder.Entity("ProjeOdevi.Models.Randevu", b =>
                {
                    b.HasOne("ProjeOdevi.Models.Doktor", "Doktor")
                        .WithMany("RandevuListesi")
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjeOdevi.Models.Hasta", "Hasta")
                        .WithMany("AlinanRandevular")
                        .HasForeignKey("HastaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doktor");

                    b.Navigation("Hasta");
                });

            modelBuilder.Entity("ProjeOdevi.Models.Admin", b =>
                {
                    b.HasOne("ProjeOdevi.Models.Kullanici", null)
                        .WithOne()
                        .HasForeignKey("ProjeOdevi.Models.Admin", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjeOdevi.Models.Doktor", b =>
                {
                    b.HasOne("ProjeOdevi.Models.Birim", "Birim")
                        .WithMany("doktorlar")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjeOdevi.Models.Kullanici", null)
                        .WithOne()
                        .HasForeignKey("ProjeOdevi.Models.Doktor", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Birim");
                });

            modelBuilder.Entity("ProjeOdevi.Models.Hasta", b =>
                {
                    b.HasOne("ProjeOdevi.Models.Kullanici", null)
                        .WithOne()
                        .HasForeignKey("ProjeOdevi.Models.Hasta", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjeOdevi.Models.Birim", b =>
                {
                    b.Navigation("doktorlar");
                });

            modelBuilder.Entity("ProjeOdevi.Models.Doktor", b =>
                {
                    b.Navigation("RandevuListesi");
                });

            modelBuilder.Entity("ProjeOdevi.Models.Hasta", b =>
                {
                    b.Navigation("AlinanRandevular");
                });
#pragma warning restore 612, 618
        }
    }
}
